{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","store/ui-slice.js","store/cart-slice.js","store/index.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","index.js"],"names":["module","exports","uiSlice","createSlice","name","initialState","cartIsVisible","notification","reducers","toggle","state","showNotification","action","status","payload","title","message","uiActions","actions","cartSlice","require","items","totalQuantity","changed","replaceCart","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","removeItemFromCart","filter","cartActions","store","configureStore","reducer","ui","cart","Card","props","className","classes","card","children","CartItem","dispatch","useDispatch","total","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","map","CartButton","cartQuantity","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMMY","Products","products","product","Notification","specialClasses","error","success","cssClasses","isInitial","App","showCart","useEffect","a","fetchData","fetch","response","ok","Error","json","data","cartData","sendRequest","method","body","JSON","stringify","sendCartData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0ba0e03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__i1Oaf\",\"details\":\"CartItem_details__2c8Jp\",\"quantity\":\"CartItem_quantity__15LCA\",\"price\":\"CartItem_price__1-B2F\",\"itemprice\":\"CartItem_itemprice__1NG0d\",\"actions\":\"CartItem_actions__22Wpy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__2xA3G\",\"price\":\"ProductItem_price__3xpd2\",\"actions\":\"ProductItem_actions__1gTm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__Ug4XQ\",\"error\":\"Notification_error__3aeUr\",\"success\":\"Notification_success__sqLG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__2E8py\",\"badge\":\"CartButton_badge__1dxEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__30vRa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__5oslB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__3hu-f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__TSGCY\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState: {\r\n    cartIsVisible: false,\r\n    notification: null\r\n  },\r\n  reducers: {\r\n    toggle(state) {\r\n      state.cartIsVisible = !state.cartIsVisible;\r\n    },\r\n    \r\n    showNotification(state, action) {\r\n      state.notification = { \r\n        status: action.payload.status,\r\n        title: action.payload.title,\r\n        message: action.payload.message,\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const uiActions = uiSlice.actions;\r\n\r\nexport default uiSlice;\r\n","const { createSlice } = require(\"@reduxjs/toolkit\");\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    changed: false,\r\n  },\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find(item => item.id === newItem.id)\r\n      state.totalQuantity++;\r\n      state.changed = true;\r\n\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1, \r\n          totalPrice: newItem.price,\r\n          name: newItem.title\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;        \r\n      }\r\n    },\r\n    \r\n    removeItemFromCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find(item => item.id === id);\r\n      state.totalQuantity--;\r\n      state.changed = true;\r\n\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter(item => item.id !== id)\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;        \r\n      }\r\n    }\r\n  }\r\n})\r\n\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;","import { configureStore } from '@reduxjs/toolkit';\r\nimport uiSlice from './ui-slice';\r\nimport cartSlice from './cart-slice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    ui: uiSlice.reducer,\r\n    cart: cartSlice.reducer\r\n  }\r\n})\r\n\r\nexport default store;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\n\nimport classes from './CartItem.module.css';\n\nconst CartItem = (props) => {\n  const dispatch = useDispatch()\n\n  const { title, quantity, total, price, id } = props.item;\n\n  const removeItemHandler = () => {\n    dispatch(cartActions.removeItemFromCart(id))\n  }\n\n  const addItemHandler = () => {\n    dispatch(cartActions.addItemToCart({\n      id,\n      title,\n      price\n    }))\n  }\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{' '}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemHandler}>-</button>\n          <button onClick={addItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from 'react-redux';\n\nimport Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\n\nconst Cart = (props) => {\n  const cartItems = useSelector(state => state.cart.items)\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2> \n      <ul>\n        {cartItems.map(item =>\n          <CartItem\n            key={item.id}\n            item={{ \n              id: item.id,\n              title: item.name,\n              quantity: item.quantity, \n              total: item.totalPrice, \n              price: item.price \n            }}\n          />)\n        }\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;","import classes from './CartButton.module.css';\nimport { uiActions } from \"../../store/ui-slice\";\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst CartButton = (props) => {\n  const dispatch = useDispatch()\n  const cartQuantity  = useSelector(state => state.cart.totalQuantity)\n\n  const toggleCartHandler = () => {\n    dispatch(uiActions.toggle())\n  };\n\n  return (\n    <button className={classes.button} onClick={toggleCartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cartQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\n\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\n\nconst ProductItem = (props) => {\n  const { title, price, description, id } = props;\n  const dispatch = useDispatch()\n\n  const addToCartHandler = () => {\n\n    dispatch(\n      cartActions.addItemToCart({\n        id,\n        title,\n        price,\n      })\n    )\n  }\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from './ProductItem';\nimport classes from './Products.module.css';\n\nconst DUMMMY = [\n  {\n    id: 'p1',\n    price: 6,\n    title: 'first book',\n    description: 'first wrote',\n  },\n  {\n    id: 'p2',\n    price: 3,\n    title: 'second book',\n    description: 'second wrote',\n  },\n]\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMMY.map((product) =>(\n          <ProductItem\n            key= {product.id}\n            id= {product.id}\n            title= {product.title}\n            price= {product.price}\n            description= {product.description}\n          />\n        ))}        \n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\r\n\r\nconst Notification = (props) => {\r\n  let specialClasses = '';\r\n\r\n  if (props.status === 'error') {\r\n    specialClasses = classes.error;\r\n  }\r\n  if (props.status === 'success') {\r\n    specialClasses = classes.success;\r\n  }\r\n\r\n  const cssClasses = `${classes.notification} ${specialClasses}`;\r\n\r\n  return (\r\n    <section className={cssClasses}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notification;","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { sendCartData, fetchCartData } from \"./store/cart-actions\";\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch()\n  const showCart = useSelector(state => state.ui.cartIsVisible)\n  const cart = useSelector(state => state.cart)\n  const notification = useSelector((state) => state.ui.notification);\n\n  useEffect(() => {\n    dispatch(fetchCartData())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    \n    if (cart.changed) {\n      dispatch(sendCartData(cart))\n    }\n\n  }, [cart, dispatch]);\n\n\n  return (\n    <>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </>\n  );\n}\nexport default App;\n","import { cartActions } from \"./cart-slice\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nexport const fetchCartData = () => {\r\n  return async (dispatch) => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        'https://redux-cart-c52ab-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json'                          // default: 'GET' \r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Sending cart data failed.');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      return data;\r\n    }\r\n\r\n    try {\r\n      const cartData = await fetchData();\r\n      // dispatch(cartActions.replaceCart(cartData));\r\n      dispatch(cartActions.replaceCart({\r\n        items: cartData.items || [],\r\n        totalQuantity: cartData.totalQuantity,\r\n      }));\r\n      \r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'error',\r\n          title: 'Error!',\r\n          message: 'Sending cart data failed!',\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport const sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: 'pending',\r\n        title: 'Sending...',\r\n        message: 'Sending cart data!',\r\n      })\r\n    );\r\n\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        'https://redux-cart-c52ab-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json',\r\n        {\r\n          method: 'PUT',\r\n          // body: JSON.stringify(cart),\r\n          body: JSON.stringify({\r\n            items: cart.items,\r\n            totalQuantity: cart.totalQuantity,\r\n          }),\r\n\r\n        }\r\n      );\r\n    \r\n      if (!response.ok) {\r\n        throw new Error('Sending cart data failed.');\r\n      }\r\n    };\r\n\r\n    try {\r\n      await sendRequest();\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'success',\r\n          title: 'Success!',\r\n          message: 'Sent cart data successfully!',\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'error',\r\n          title: 'Error!',\r\n          message: 'Sending cart data failed!',\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n","import ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}